<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd">

  <context:annotation-config />
  <aop:aspectj-autoproxy />
  <context:property-placeholder location="classpath:*.properties" />

  <context:component-scan base-package="com.yeapoo.odaesan">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
  </context:component-scan>

  <task:annotation-driven executor="executor" />
  <task:executor id="executor" keep-alive="60" pool-size="20-40" queue-capacity="250" rejection-policy="CALLER_RUNS" />
  <!-- <task:annotation-driven scheduler="scheduler" /> <task:scheduler id="scheduler" pool-size="4" /> -->

  <util:map id="materialProcessors">
    <entry key="image" value-ref="imageProcessor"></entry>
    <entry key="news" value-ref="newsProcessor"></entry>
    <entry key="mpnews" value-ref="newsProcessor"></entry>
    <entry key="text" value-ref="textProcessor"></entry>
    <entry key="video" value-ref="videoProcessor"></entry>
    <entry key="mpvideo" value-ref="videoProcessor"></entry>
    <entry key="voice" value-ref="voiceProcessor"></entry>
  </util:map>

  <bean id="mapper" class="org.codehaus.jackson.map.ObjectMapper" />

  <bean id="clientHttpRequestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory" />
  <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
    <constructor-arg ref="clientHttpRequestFactory" />
  </bean>

  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="${jdbc.driver}"></property>
    <property name="jdbcUrl" value="${jdbc.url}"></property>
    <property name="user" value="${jdbc.username}"></property>
    <property name="password" value="${jdbc.password}"></property>

    <!-- 详细参数说明参见database-config.properties -->
    <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
    <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
    <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
    <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
    <property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>
    <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"></property>
    <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"></property>
    <property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}"></property>
    <property name="maxStatements" value="${jdbc.maxStatements}"></property>
    <property name="testConnectionOnCheckout" value="${jdbc.testConnectionOnCheckout}"></property>
  </bean>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <constructor-arg ref="dataSource"></constructor-arg>
  </bean>

  <tx:annotation-driven />
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>
</beans>